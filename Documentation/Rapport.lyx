#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "language=C,keywordstyle={\color{blue}},commentstyle={\color{magenta}\itshape},emphstyle={\color{red}},breaklines=true,basicstyle={\ttfamily},stringstyle={\color{green}},identifierstyle={\color{cyan}}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Rapport de projet Mathématiques.
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\reel}{\mathbb{R}}
{\mathbb{R}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
Sommaire
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Motivation
\end_layout

\begin_layout Subsection
Application théorique
\end_layout

\begin_layout Standard
Le but est de résoudre l'équation linéaire de matrice : 
\begin_inset Formula $AX=B$
\end_inset

 dans 
\begin_inset Formula $\reel^{N}$
\end_inset

 sans avoir à calculer 
\begin_inset Formula $A^{-1}$
\end_inset

.
 Car calculer 
\begin_inset Formula $A^{-1}$
\end_inset

 peut poser problème lorsque 
\begin_inset Formula $N$
\end_inset

 devient grand.
 En effet, pour 
\begin_inset Formula $N=20$
\end_inset

, il faudra 5 fois l'age de l'univers pour calculer 
\begin_inset Formula $A^{-1}$
\end_inset

.
\end_layout

\begin_layout Standard
Nous allons donc à l'aide de plusieurs méthodes, tenter de simplifier le
 problème en sous-problèmes plus simple à résoudre et procéder à des optimisatio
ns graduelles afin d'optimiser le cout en temps de calcul et l'espace mémoire
 utilisé pour le cacul.
\end_layout

\begin_layout Section
Références
\end_layout

\begin_layout Subsection
Bibliographie
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "example-glossaries-url"
options "plain"

\end_inset


\end_layout

\begin_layout Subsection
Biographies
\end_layout

\begin_layout Subsubsection
Gauss
\end_layout

\begin_layout Standard
Avant d'étudier la méthode de Gauss, il peut être pertinent d'établir une
 courte biographie de son auteur.
 Surnommé 
\begin_inset Quotes eld
\end_inset

prince des mathématiques
\begin_inset Quotes erd
\end_inset

 par ses pairs, ce mathématicien, né le 30 avril 1777, a contribué de bien
 des manières à développer non seulement les mathématiques mais également
 les méthodes en astrophysique et en électromagnétisme.
 Johann Carl Friedrich Gauss a pu se pencher sur des problèmes dits classiques
 (depuis l'antiquité) en adoptant des méthodes et raisonnements modernes.
 Il démontre alors le théorème fondamental de l'algèbre que l'on connaît
 aujourd'hui sous le nom du théorème de d'Alembert-Gauss, il dédie également
 un ouvrage à la théorie des nombres contenant plusieurs démonstrations
 qui révolutionnent l'arithmétique, on lui doit en partie la forme actuelle
 des nombres complexes.
 En astrophysique, il met au point la méthodes des moindres carrés permettant
 de minimiser les incertitudes dues aux mesures ce qui lui permet de déterminer
 exactement la position de Ceres, une planète naine du système solaire.
 Avec la contribution de Wilhem Weber, Gauss formule deux théorèmes essentiels
 en électromagnétisme réfutant l'existence de monopôle magnétique et établissant
 une relation entre le flux d'un champ électrique sur une surface fermée
 et la charge électrique totale à l'intérieur de cette surface.
 Cette liste est loin de résumer tous ses travaux, dont une partie a été
 publiée après son décès le 23 février 1855, ces derniers sont très nombreux
 et ont servi de base de recherche pour d'autres mathématiciens et physiciens
 après lui.
 Il est donc intéressant d'étudier la solution apportée par Gauss et de
 l'appliquer à notre problématique.
 L'élimination de Gauss est expliquée ci-après.
\end_layout

\begin_layout Subsubsection
Choleski
\end_layout

\begin_layout Standard
<Faire la biographie de Choleski>
\end_layout

\begin_layout Section
Travail préliminaire
\end_layout

\begin_layout Subsection
Type de donnée
\end_layout

\begin_layout Standard
Tout d'abord, en C, commme la plupart des langages de programmation, il
 est impossible d'exprimer l'intégralité des réels, entiers, complexes ...
 car il faudrait disposer d'une mémoire illimitée.
 Pour les nombres réels, il faut choisir parmis les types suivants :
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Taille
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
float
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
long double
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Nous nous somme penché vers le type 
\begin_inset Quotes eld
\end_inset

double
\begin_inset Quotes erd
\end_inset

 car ils offrent une précision et une portée suffisante.
 De plus, comme ici nous nous intéresseront à la performance offerte par
 les algorythme.
 Il est important que de prendre en compte cette contrainte dès le début,
 lors du choix des type.
 Ainsi, contrairement au type 
\begin_inset Quotes eld
\end_inset

long double
\begin_inset Quotes erd
\end_inset

, le type 
\begin_inset Quotes eld
\end_inset

double
\begin_inset Quotes erd
\end_inset

 nécéssite pas de temps processeur supplémentaire par rapport à un 
\begin_inset Quotes eld
\end_inset

float
\begin_inset Quotes erd
\end_inset

 sur les ordinateurs modernes.
 C'est à dire dont les processeur possèdent des registres de calculs flotant
 de 64 bits / 8 octects.
\end_layout

\begin_layout Subsection
Implémentation des matrices et vecteurs
\end_layout

\begin_layout Standard
Ensuite, les concepts de matrice et de vecteur en C ne sont pas implémenté
 directement dans le langage.
 Cependant, nous pouvons nous servir des types liste en 1 et 2 dimensions
 pour imiter un vecteur et une matrice.
 Ainsi, pour l'allocation des vecteurs et des matrices, nous avons implémenté
 les fonctions suivantes :
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

double *Allocation_Vecteur(int Taille)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    // - Allocation d'un espace de mémoire de taille = Taille Vecteur *
 Taille du type (8 octets).
\end_layout

\begin_layout Plain Layout

    return malloc(Taille * sizeof(double));
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Méthodes directes
\end_layout

\begin_layout Subsection
Méthode triangulaire inférieure
\end_layout

\begin_layout Subsubsection*
Méthode
\end_layout

\begin_layout Standard
On chercher le vecteur 
\begin_inset Formula $X$
\end_inset

 de taille 
\begin_inset Formula $N$
\end_inset

 tel que 
\begin_inset Formula $AX=B$
\end_inset

, où 
\begin_inset Formula $A$
\end_inset

 sera une matrice triangulaire inférieure carré de de taille 
\begin_inset Formula $N$
\end_inset

.
\end_layout

\begin_layout Standard
La formule générale pour les termes de 
\begin_inset Formula $X$
\end_inset

 est : 
\begin_inset Formula $x_{i}=\frac{b_{i}-\sum_{j=1}^{i-1}a_{ij}x_{j}}{a_{ii}}$
\end_inset

, 
\begin_inset Formula $i=1,\ldots,N$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Exemple
\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $N=3$
\end_inset

 :
\end_layout

\begin_layout Standard
\begin_inset Formula $\left(\begin{array}{ccc}
a_{11} & 0 & 0\\
a_{21} & a_{22} & 0\\
a_{31} & a_{32} & a_{33}
\end{array}\right)\left(\begin{array}{c}
x_{1}\\
x_{2}\\
x_{3}
\end{array}\right)=\text{\left(\begin{array}{c}
b_{1}\\
b_{2}\\
b_{3}
\end{array}\right)\ensuremath{\Leftrightarrow\left\{ \begin{array}{c}
a_{11}x_{1}=b_{1}\\
a_{21}x_{1}+a_{22}x_{2}=b_{2}\\
a_{31}x_{1}+a_{32}x_{2}+a_{33}x_{3}=b_{3}
\end{array}\right.}}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\Leftrightarrow\begin{pmatrix}x_{1}\\
x_{2}\\
x_{3}
\end{pmatrix}=\begin{pmatrix}\frac{b_{1}}{a_{11}}\\
\frac{b_{2}}{a_{22}}-\frac{a_{21}}{a_{22}}x_{1}\\
\frac{b_{3}}{a_{33}}-\frac{a_{31}}{a_{33}}x_{1}-\frac{a_{32}}{a_{33}}x_{2}
\end{pmatrix}=\begin{pmatrix}\frac{b_{1}}{a_{11}}\\
\frac{b_{2}}{a_{22}}-\frac{a_{21}}{a_{22}}x_{1}\\
\frac{b_{3}-\sum_{k=1}^{2}a_{3k}x_{k}}{a_{33}}
\end{pmatrix}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $x_{i}=\frac{b_{i}-\sum_{j=1}^{i-1}a_{ij}x_{j}}{a_{ii}}$
\end_inset

, 
\begin_inset Formula $i=1,\ldots,N$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Algorithme
\end_layout

\begin_layout Standard
Algorithme de la remontée :
\end_layout

\begin_layout Standard
Soit A une matrice carrée de taille N, X et B un vecteur de taille N.
\end_layout

\begin_layout Standard
pour i = 1 à N faire
\end_layout

\begin_layout Standard
sum = 0
\end_layout

\begin_layout Standard
pour j=1 à i - 1 faire
\end_layout

\begin_layout Standard
sum=sum+A[i][j]*x[j]
\end_layout

\begin_layout Standard
fin pour
\end_layout

\begin_layout Standard
x[i] = (b[i] - sum)/Aii
\end_layout

\begin_layout Standard
fin pour
\end_layout

\begin_layout Subsection
Méthode triangulaire supérieure
\end_layout

\begin_layout Subsubsection*
Méthode
\end_layout

\begin_layout Standard
On chercher le vecteur 
\begin_inset Formula $X$
\end_inset

 de taille 
\begin_inset Formula $N$
\end_inset

 tel que 
\begin_inset Formula $AX=B$
\end_inset

, où 
\begin_inset Formula $A$
\end_inset

 sera une matrice triangulaire supérieure carré de de taille 
\begin_inset Formula $N$
\end_inset

.
\end_layout

\begin_layout Standard
Ainsi, de manière de analogue à résolution de matrice inférieure, la formule
 générale pour les termes de 
\begin_inset Formula $X$
\end_inset

 est : 
\begin_inset Formula $x_{i}=\frac{b_{i}-\sum_{j=1}^{i-1}a_{ij}x_{j}}{a_{ii}}$
\end_inset

, 
\begin_inset Formula $i=1,\ldots,N$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Exemple
\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $N=3$
\end_inset

 :
\end_layout

\begin_layout Standard
\begin_inset Formula $\left(\begin{array}{ccc}
a_{11} & 0 & 0\\
a_{21} & a_{22} & 0\\
a_{31} & a_{32} & a_{33}
\end{array}\right)\left(\begin{array}{c}
x_{1}\\
x_{2}\\
x_{3}
\end{array}\right)=\text{\left(\begin{array}{c}
b_{1}\\
b_{2}\\
b_{3}
\end{array}\right)\ensuremath{\Leftrightarrow\left\{ \begin{array}{c}
a_{11}x_{1}=b_{1}\\
a_{21}x_{1}+a_{22}x_{2}=b_{2}\\
a_{31}x_{1}+a_{32}x_{2}+a_{33}x_{3}=b_{3}
\end{array}\right.}}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\Leftrightarrow\begin{pmatrix}x_{1}\\
x_{2}\\
x_{3}
\end{pmatrix}=\begin{pmatrix}\frac{b_{1}}{a_{11}}\\
\frac{b_{2}}{a_{22}}-\frac{a_{21}}{a_{22}}x_{1}\\
\frac{b_{3}}{a_{33}}-\frac{a_{31}}{a_{33}}x_{1}-\frac{a_{32}}{a_{33}}x_{2}
\end{pmatrix}=\begin{pmatrix}\frac{b_{1}}{a_{11}}\\
\frac{b_{2}}{a_{22}}-\frac{a_{21}}{a_{22}}x_{1}\\
\frac{b_{3}-\sum_{k=1}^{2}a_{3k}x_{k}}{a_{33}}
\end{pmatrix}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $x_{i}=\frac{b_{i}-\sum_{j=1}^{i-1}a_{ij}x_{j}}{a_{ii}}$
\end_inset

, 
\begin_inset Formula $i=1,\ldots,N$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Algorithme
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Ecrire algorithme ici
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Elimination de Gauss
\end_layout

\begin_layout Subsubsection*
Méthode
\end_layout

\begin_layout Standard
On cherche a résourde 
\begin_inset Formula $AX+B$
\end_inset

, on va chercher à les transformer l'expression en 
\begin_inset Formula $UX=e$
\end_inset

 
\end_layout

\begin_layout Subsubsection*
Conclusion
\end_layout

\begin_layout Standard
Cette méthode est relativement efficace, cependant, il faut reclaculer totalemen
t les matrices 
\begin_inset Formula $U$
\end_inset

 et 
\begin_inset Formula $e$
\end_inset

 si 
\begin_inset Formula $B$
\end_inset

 change, ce qui est couteux en temps de calcul.
\end_layout

\begin_layout Subsection
Factorisation 
\begin_inset Quotes eld
\end_inset

LU
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
On factorise 
\begin_inset Formula $A$
\end_inset

 en une matrice triangulaire supérieure qu'on appele 
\begin_inset Formula $U$
\end_inset

 et une matrice triangulaire inférieure qu'on appele 
\begin_inset Formula $L$
\end_inset

 tel que 
\begin_inset Formula $A=LU$
\end_inset

.
 Cette opération est réalisé à l'aide de la fonction 
\begin_inset Quotes eld
\end_inset

LU
\begin_inset Quotes erd
\end_inset

.
 La diagonale de 
\begin_inset Formula $L$
\end_inset

 sera rempli de 
\begin_inset Formula $1$
\end_inset

 afin de faciliter la factorisation.
\end_layout

\begin_layout Standard
Comme on a 
\begin_inset Formula $A=LU$
\end_inset

 et 
\begin_inset Formula $AX=B$
\end_inset

, on peut en déduire que : 
\begin_inset Formula $LUX=B$
\end_inset

.
\end_layout

\begin_layout Standard
Ensuite, on cherche à obtenir la matrice 
\begin_inset Formula $Y$
\end_inset

 
\begin_inset Formula $Y=UX$
\end_inset

 tel que 
\begin_inset Formula $LY=B$
\end_inset

 avec la fonction 
\begin_inset Quotes eld
\end_inset

Sol_Inf
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Enfin, on peut trouver 
\begin_inset Formula $X$
\end_inset

 avec 
\begin_inset Formula $UX=Y$
\end_inset

 avec la fonction 
\begin_inset Quotes eld
\end_inset

Sol_Sup
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Code
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void LU(double **L, double **A, int Taille)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    Nettoyer_Matrice(L, Taille, Taille);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    // Rempli les 1 en diagonale
\end_layout

\begin_layout Plain Layout

    for (int i = 0; i < Taille; i++)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        L[i][i] = 1;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    // Calcule L et U
\end_layout

\begin_layout Plain Layout

    for (int i = 0; i < Taille - 1; i++)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        for (int k = i + 1; k < Taille; k++)
\end_layout

\begin_layout Plain Layout

        {
\end_layout

\begin_layout Plain Layout

            double C = A[k][i] / A[i][i];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

            L[k][i] = C;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

            for (int j = 0; j < Taille; j++)
\end_layout

\begin_layout Plain Layout

            {
\end_layout

\begin_layout Plain Layout

                A[k][j] = A[k][j] - (C * A[i][j]);
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Conclusion
\end_layout

\begin_layout Subsection
Factorisation de Cholesky
\end_layout

\begin_layout Subsubsection*
Méthode
\end_layout

\begin_layout Standard
Soit la matrice 
\begin_inset Formula $A$
\end_inset

 qui est : 
\end_layout

\begin_layout Itemize
Symétrique : c'est à dire que 
\begin_inset Formula $A=A^{T}$
\end_inset

.
\end_layout

\begin_layout Itemize
Définie positive, c'est à dire quelle est positive et inversible, tel que
 
\begin_inset Formula $\left\langle AY,Y\right\rangle >0,\forall Y\in\reel^{N}\setminus\left\{ \overrightarrow{0}\right\} $
\end_inset


\end_layout

\begin_layout Standard
Alors, on a : 
\begin_inset Formula $A=L\cdot L^{T}$
\end_inset

 ou 
\begin_inset Formula $L=\begin{pmatrix}l_{11} & 0 & 0\\
\vdots & \ddots & 0\\
l_{1N} & \cdots & l_{NN}
\end{pmatrix}$
\end_inset

 avec 
\begin_inset Formula $L_{ii}>0$
\end_inset

 pour 
\begin_inset Formula $i=0,\ldots,N$
\end_inset

 (une matrice triangulaire inférieure dont la diagonale est positive).
\end_layout

\begin_layout Standard
On a donc 
\begin_inset Formula $A=L\cdot L^{T}$
\end_inset

 et 
\begin_inset Formula $AX=B$
\end_inset

, si on remplace 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $L\cdot L^{T}X=B$
\end_inset

 et simplifier avec 
\begin_inset Formula $LY=B$
\end_inset

 ou 
\begin_inset Formula $Y=L^{T}X$
\end_inset

.
 On peut donc résoudre 
\begin_inset Formula $LY=B$
\end_inset

 avec la fonction 
\begin_inset Quotes eld
\end_inset

Sol_Inf
\begin_inset Quotes erd
\end_inset

 et efin résoudre 
\begin_inset Formula $L^{T}X=Y$
\end_inset

 avec la fonction 
\begin_inset Quotes eld
\end_inset

Sol_Sup
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Exemple
\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $L$
\end_inset

 une matrice de taille 
\begin_inset Formula $N*N$
\end_inset

 ou 
\begin_inset Formula $N=4$
\end_inset

 
\end_layout

\begin_layout Standard
On créer une matrice 
\begin_inset Formula $L$
\end_inset

 tel que 
\begin_inset Formula $L\cdot L^{T}=A$
\end_inset

, on a :
\end_layout

\begin_layout Standard
\begin_inset Formula $\underbrace{\begin{pmatrix}l_{11} & 0 & 0 & 0\\
l_{21} & l_{22} & 0 & 0\\
l_{31} & l_{32} & l_{33} & 0\\
l_{41} & l_{42} & l_{43} & l_{44}
\end{pmatrix}}_{L}\underbrace{\begin{pmatrix}l_{11} & l_{21} & l_{31} & l_{41}\\
0 & l_{22} & l_{32} & l_{42}\\
0 & 0 & l_{33} & l_{43}\\
0 & 0 & 0 & l_{44}
\end{pmatrix}}_{L^{T}}=\underbrace{\begin{pmatrix}a_{11} & a_{12} & a_{13} & a_{14}\\
a_{21} & a_{22} & a_{23} & a_{24}\\
a_{31} & a_{32} & a_{33} & a_{34}\\
a_{41} & a_{42} & a_{43} & a_{44}
\end{pmatrix}}_{A}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\Leftrightarrow\begin{pmatrix}l_{11}^{2} & l_{11}l_{21} & l_{11}l_{31} & l_{11}l_{41}\\
l_{21}l_{11} & l_{21}^{2}+l_{22}^{2} & l_{21}l_{31}+l_{22}l_{32} & l_{21}l_{41}+l_{22}l_{42}\\
l_{31}l_{11} & l_{31}l_{21}+l_{32}l_{22} & l_{31}^{2}+l_{32}^{2}+l_{33}^{2} & l_{31}l_{41}+l_{32}l_{42}+l_{33}l_{43}\\
l_{41}l_{11} & l_{41}l_{21}+l_{42}l_{22} & l_{41}l_{31}+l_{42}l_{32}+l_{43}l_{33} & l_{41}^{2}+l_{42}^{2}+l_{43}^{2}+l_{44}^{2}
\end{pmatrix}=\begin{pmatrix}a_{11} & a_{12} & a_{13} & a_{14}\\
a_{21} & a_{22} & a_{23} & a_{24}\\
a_{31} & a_{32} & a_{33} & a_{34}\\
a_{41} & a_{42} & a_{43} & a_{44}
\end{pmatrix}$
\end_inset


\end_layout

\begin_layout Standard
On a donc pour les termes en diagonale :
\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{11}^{2}=a_{11}\Rightarrow l_{11}=\sqrt{a_{11}}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{21}^{2}+l_{22}^{2}=a_{22}\Rightarrow l_{22}=\sqrt{a_{22}-l_{21}^{2}}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{31}^{2}+l_{32}^{2}+l_{33}^{2}=a_{33}\Rightarrow l_{33}=\sqrt{a_{33}-l_{31}^{2}-l_{32}^{2}}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{41}^{2}+l_{42}^{2}+l_{43}^{2}+l_{44}^{2}=a_{44}\Rightarrow l_{44}=\sqrt{a_{44}-l_{41}^{2}-l_{42}^{2}-l_{43}^{2}}$
\end_inset


\end_layout

\begin_layout Standard
On constate que : 
\begin_inset Formula $l_{ii}=\sqrt{a_{ii}-\sum_{k=1}^{i-1}l_{ik}^{2}}$
\end_inset

 
\end_layout

\begin_layout Standard
On a également pour les autres termes :
\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{21}l_{11}=a_{21}\Rightarrow l_{21}=\frac{a_{21}}{l_{11}}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{31}l_{11}=a_{31}\Rightarrow l_{31}=\frac{a_{31}}{l_{11}}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{31}l_{11}=a_{41}\Rightarrow l_{41}=\frac{a_{31}}{l_{11}}$
\end_inset


\end_layout

\begin_layout Standard
On constate que 
\begin_inset Formula $l_{ij}=\frac{a_{ij}}{l_{jj}}-\sum_{k=1}^{j-1}l_{ik}l_{jk}$
\end_inset


\end_layout

\begin_layout Subsubsection*
Algorithme
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Ecrire code
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Conclusion
\end_layout

\begin_layout Section
Méthodes itératives
\end_layout

\begin_layout Standard
Contrairement aux méthodes directes précédents où l'on cherche directement
 le vecteur 
\begin_inset Formula $X$
\end_inset

 pour résoudre 
\begin_inset Formula $AX=B$
\end_inset

.
 Ici, nous allons nous intéresser.
\end_layout

\begin_layout Subsection
Méthode de Jacobi
\end_layout

\begin_layout Subsubsection*
Méthode
\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $A$
\end_inset

 une matrice carrée de taille 
\begin_inset Formula $N$
\end_inset

 et 
\begin_inset Formula $B$
\end_inset

 un vecteur de taille 
\begin_inset Formula $N$
\end_inset

, on cherche toujours à résoudre l'équation 
\begin_inset Formula $AX=B$
\end_inset

.
\end_layout

\begin_layout Standard
On peut décomposer 
\begin_inset Formula $A$
\end_inset

 en 3 matrices tel que 
\begin_inset Formula $A=E+F+G$
\end_inset

 : 
\end_layout

\begin_layout Itemize
\begin_inset Formula $D$
\end_inset

 la matrice contenant la diagonnale de 
\begin_inset Formula $A$
\end_inset

 : 
\begin_inset Formula $D=\begin{pmatrix}A_{11} & 0 & 0\\
0 & \ddots & 0\\
0 & 0 & A_{nn}
\end{pmatrix}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $E$
\end_inset

 la matrice contenant la partie inférieur de 
\begin_inset Formula $A$
\end_inset

 (sans sa diagonale) : 
\begin_inset Formula $E=\begin{pmatrix}0 & \cdots & \cdots & 0\\
A_{1j} & \ddots & \iddots & \vdots\\
\vdots & \ddots & \ddots & \vdots\\
A_{ij} & \cdots & A_{\left(i-1\right)j} & 0
\end{pmatrix}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $F$
\end_inset

 la matrice contenant la partie supérieure de 
\begin_inset Formula $A$
\end_inset

 (sans la diagonale) : 
\begin_inset Formula $F=\begin{pmatrix}0 & A & \cdots & A_{ij}\\
\vdots & \ddots & \ddots & \vdots\\
\vdots & \iddots & \ddots & A\\
0 & \cdots & \cdots & 0
\end{pmatrix}$
\end_inset


\end_layout

\begin_layout Standard
L'équation initiale 
\begin_inset Formula $AX=B$
\end_inset

 devient alors : 
\begin_inset Formula $\left(E+D+F\right)X=B$
\end_inset

, ce qui donne
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Rightarrow DX=b-\left(E+F\right)X
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Rightarrow X=D^{-1}\left(b-\left[E+F\right]X\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{cases}
X^{0} & k=0\\
X^{k+1}=D^{-1}\left(b-\left[E+F\right]X^{k}\right) & k=1,\ldots,N
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Ainsi, pour un 
\begin_inset Formula $X^{0}$
\end_inset

 donné, on peut calculer 
\begin_inset Formula $X_{i}^{k+1}=\frac{b_{i}-\sum_{j=1,j\neq i}^{N}A_{ij}X_{j}^{k}}{A_{ii}}$
\end_inset

 pour 
\begin_inset Formula $i=1,\ldots,N$
\end_inset

.
\end_layout

\begin_layout Standard
On peut alors calculer la norme : 
\begin_inset Formula $\text{Norm}=\left\Vert x_{k+1}-x_{k}\right\Vert _{2}=\sqrt{\sum_{n=0}^{N-1}\left(x_{k+1}\left[n\right]-x_{k}\left[n\right]\right)^{2}}$
\end_inset


\end_layout

\begin_layout Standard
On définit 
\begin_inset Formula $\varepsilon=0,001$
\end_inset

 et 
\begin_inset Formula $X_{k}=X_{0}$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Algorithme
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Méthode de Gauss-Seidel
\end_layout

\begin_layout Subsubsection*
Méthode
\end_layout

\begin_layout Standard
d
\end_layout

\begin_layout Subsubsection*
Algorithme
\end_layout

\begin_layout Standard
f
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Ainsi, nous avons trouvé différentes méthodes pour résoudre l'équation de
 matrice : 
\begin_inset Formula $AX=B$
\end_inset

 sans à calculer directement 
\begin_inset Formula $A^{-1}$
\end_inset

.
\end_layout

\end_body
\end_document
